<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Daniil Pintjuk</title>
    <link>https://localhost:1313/projects/</link>
    <description>Recent content in Projects on Daniil Pintjuk</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 01 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://localhost:1313/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Function as a Service - A Go&#43;Docker implimentation</title>
      <link>https://localhost:1313/projects/2019-function-as-a-service/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://localhost:1313/projects/2019-function-as-a-service/</guid>
      <description>This is a small GoLang infrastructure app that enables one to deploy simple REST servers, acting as single functions. The goal was to deploy and scale the functions horizontally with ease. To achieve this, we leveraged the scaling and service discovery that comes for free in a docker-compose and swarm.
The core component is the FaaS Gateway. The image above illustrates the idea. The gateway uses docker to discover function dynamically and updating an internal table, a table of functions, and the containers providing them.</description>
    </item>
    
  </channel>
</rss>